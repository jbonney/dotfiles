{{ if eq .chezmoi.os "linux" -}}
#!/bin/bash
echo "#########################################################################"
echo "#####                    Install development tools                  #####"
echo "#########################################################################"
echo "*************************************************************************"
echo "*****             Install code editors (Zed, Helix editor)          *****"
echo "*************************************************************************"
# Zed editor
if [ -e ~/.local/zed.app/bin/zed ]; then
  echo "Zed is already installed, skipping installation"
else
  echo "Zed not installed yet, starting installation"
  curl https://zed.dev/install.sh | sh
fi

# Helix editor
if ! command -v hx >/dev/null 2>&1
then
  sudo add-apt-repository -y ppa:maveonair/helix-editor
  sudo apt update -y
  sudo apt install -y helix
else
  echo "helix editor already installed, skipping installation"
fi

echo "*************************************************************************"
echo "*****                      Install Kitty terminal                   *****"
echo "*************************************************************************"
# Kitty terminal
if [ -e ~/.local/kitty.app/bin/kitty ]; then
  echo "Kitty is already installed, skipping installation"
else
  echo "Kitty not installed yet, starting installation"
  curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin launch=n
  # Create symbolic links to add kitty and kitten to PATH (assuming ~/.local/bin is in
  # your system-wide PATH)
  ln -sf ~/.local/kitty.app/bin/kitty ~/.local/kitty.app/bin/kitten ~/.local/bin/
  # Place the kitty.desktop file somewhere it can be found by the OS
  cp ~/.local/kitty.app/share/applications/kitty.desktop ~/.local/share/applications/
  # If you want to open text files and images in kitty via your file manager also add the kitty-open.desktop file
  cp ~/.local/kitty.app/share/applications/kitty-open.desktop ~/.local/share/applications/
  # Update the paths to the kitty and its icon in the kitty desktop file(s)
  sed -i "s|Icon=kitty|Icon=$(readlink -f ~)/.local/kitty.app/share/icons/hicolor/256x256/apps/kitty.png|g" ~/.local/share/applications/kitty*.desktop
  sed -i "s|Exec=kitty|Exec=$(readlink -f ~)/.local/kitty.app/bin/kitty|g" ~/.local/share/applications/kitty*.desktop
  # Make xdg-terminal-exec (and hence desktop environments that support it use kitty)
  echo 'kitty.desktop' > ~/.config/xdg-terminals.list
fi

echo "*************************************************************************"
echo "*****                         Install lazygit                       *****"
echo "*************************************************************************"
# Lazygit as documented in https://github.com/jesseduffield/lazygit?tab=readme-ov-file#installation
if ! command -v lazygit >/dev/null 2>&1
then
  LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | \grep -Po '"tag_name": *"v\K[^"]*')
  echo "Download lazygit version $LAZYGIT_VERSION"
  wget -O /tmp/lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
  echo "Uncompress lazygit"
  tar xf /tmp/lazygit.tar.gz lazygit
  # rm /tmp/lazygit.tar.gz
  echo "Install lazygit"
  sudo install lazygit -D -t /usr/local/bin/
else
  echo "lazygit already installed, skipping installation"
fi

echo "*************************************************************************"
echo "*****              Install rbenv (ruby version manager)             *****"
echo "*************************************************************************"
# rbenv for ruby version management
if ! command -v rbenv >/dev/null 2>&1
then
  git clone https://github.com/rbenv/rbenv.git ~/.rbenv
  ~/.rbenv/bin/rbenv init
  git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build
else
  echo "rbenv already installed, skipping installation"
fi

echo "*************************************************************************"
echo "*****                         Install docker                        *****"
echo "*************************************************************************"
# docker
if ! command -v docker >/dev/null 2>&1
then
  echo "uninstall conflicting packages"
  for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
  # Add Docker's official GPG key:
  sudo apt-get update -y
  sudo apt-get install -y ca-certificates curl
  sudo install -m 0755 -d /etc/apt/keyrings
  sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
  sudo chmod a+r /etc/apt/keyrings/docker.asc
  # Add the repository to Apt sources:
  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  sudo apt-get update -y
  # Install
  sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  # Post installation
  sudo groupadd docker
  sudo usermod -aG docker $USER
else
  echo "docker already installed, skipping installation"
fi

{{ else if eq .chezmoi.os "darwin" -}}
#!/bin/sh
brew install --cask zed
brew install --cask kitty
brew install --cask devtoys
brew install helix lazygit rbenv
{{ end -}}
